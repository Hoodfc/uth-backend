# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type Mutation {
  createUser(name: String!, password: String!, email: String!): User!
  updateUser(name: String!, password: String!, email: String!): Boolean!
  changePassword(password: String!, token: String!): User!
  login(name: String!, password: String!): User
  logout: Boolean!
  updateRole(name: String!, role: String!): Boolean!
}

type Query {
  hi: String!
  users(take: Float!, skip: Float!): UserPaginator!
  me: User!
  forgotPassword(email: String!): Boolean!
}

type User {
  """
  The `ID` scalar type represents a unique identifier, often used to refetch an
  object or as key for a cache. The ID type appears in a JSON response as a
  String; however, it is not intended to be human-readable. When expected as an
  input type, any string (such as `"4"`) or integer (such as `4`) input value
  will be accepted as an ID.
  """
  ID: String!
  name: String!
  email: String!
  role: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type UserPaginator {
  items: [User!]!
  total: Int!
  hasMore: Boolean!
  page: Int!
}
